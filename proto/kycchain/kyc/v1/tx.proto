syntax = "proto3";

package kycchain.kyc.v1;

import "amino/amino.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "kycchain/kyc/v1/params.proto";
import "kycchain/kyc/v1/issuer.proto";

option go_package = "vnic/x/kyc/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;

  // UpdateParams defines a (governance) operation for updating the module
  // parameters. The authority defaults to the x/gov module account.
  rpc UpdateParams(MsgUpdateParams) returns (MsgUpdateParamsResponse);

  // RegisterIdentity defines a method for registering a new identity
  rpc RegisterIdentity(MsgRegisterIdentity) returns (MsgRegisterIdentityResponse);

  // IssueCredential defines a method for issuing a credential to an identity
  rpc IssueCredential(MsgIssueCredential) returns (MsgIssueCredentialResponse);

  // VerifyKyc defines a method for verifying KYC status
  rpc VerifyKyc(MsgVerifyKyc) returns (MsgVerifyKycResponse);

  // AddIssuer defines a method for adding a new KYC issuer
  rpc AddIssuer(MsgAddIssuer) returns (MsgAddIssuerResponse);

  // RemoveIssuer defines a method for removing a KYC issuer
  rpc RemoveIssuer(MsgRemoveIssuer) returns (MsgRemoveIssuerResponse);

  // UpdateIdentity defines a method for updating identity state and KYC level
  rpc UpdateIdentity(MsgUpdateIdentity) returns (MsgUpdateIdentityResponse);
}

// MsgUpdateParams is the Msg/UpdateParams request type.
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name) = "kyc/UpdateParams";

  // authority is the address that controls the module (defaults to x/gov unless overwritten).
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // params defines the module parameters to update.
  // NOTE: All parameters must be supplied.
  Params params = 2 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
message MsgUpdateParamsResponse {}

// MsgRegisterIdentity is the Msg/RegisterIdentity request type.
message MsgRegisterIdentity {
  option (cosmos.msg.v1.signer) = "creator";
  option (amino.name) = "kyc/RegisterIdentity";

  string creator = 1;
  string id = 2;
}

// MsgRegisterIdentityResponse defines the response structure for executing a
// MsgRegisterIdentity message.
message MsgRegisterIdentityResponse {}

// MsgIssueCredential is the Msg/IssueCredential request type.
message MsgIssueCredential {
  option (cosmos.msg.v1.signer) = "creator";
  option (amino.name) = "kyc/IssueCredential";

  string creator = 1;
  string id = 2;
  int64 level = 3;
}

// MsgIssueCredentialResponse defines the response structure for executing a
// MsgIssueCredential message.
message MsgIssueCredentialResponse {}

// MsgVerifyKyc is the Msg/VerifyKyc request type.
message MsgVerifyKyc {
  option (cosmos.msg.v1.signer) = "creator";
  option (amino.name) = "kyc/VerifyKyc";

  string creator = 1;
  string proof = 2;
  int64 level = 3;
}

// MsgVerifyKycResponse defines the response structure for executing a
// MsgVerifyKyc message.
message MsgVerifyKycResponse {}

// MsgAddIssuer is the Msg/AddIssuer request type.
message MsgAddIssuer {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name) = "kyc/AddIssuer";

  // authority is the address that controls the module (defaults to x/gov unless overwritten).
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  
  // issuer is the issuer to be added
  Issuer issuer = 2 [(gogoproto.nullable) = false];
}

// MsgAddIssuerResponse defines the response structure for executing a
// MsgAddIssuer message.
message MsgAddIssuerResponse {}

// MsgRemoveIssuer is the Msg/RemoveIssuer request type.
message MsgRemoveIssuer {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name) = "kyc/RemoveIssuer";

  // authority is the address that controls the module (defaults to x/gov unless overwritten).
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  
  // address is the address of the issuer to be removed
  string address = 2;
}

// MsgRemoveIssuerResponse defines the response structure for executing a
// MsgRemoveIssuer message.
message MsgRemoveIssuerResponse {}

// MsgUpdateIdentity is the Msg/UpdateIdentity request type.
message MsgUpdateIdentity {
  option (cosmos.msg.v1.signer) = "issuer";
  option (amino.name) = "kyc/UpdateIdentity";

  // issuer is the address of the authorized issuer
  string issuer = 1;
  
  // identity_id is the ID of the identity to update
  string identity_id = 2;
  
  // kyc_level is the new KYC level
  int32 kyc_level = 3;
  
  // attributes are additional attributes to set
  map<string, string> attributes = 4;
}

// MsgUpdateIdentityResponse defines the response structure for executing a
// MsgUpdateIdentity message.
message MsgUpdateIdentityResponse {}